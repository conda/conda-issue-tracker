name: Automate Boards
on:
  issues:
    types: [opened, labeled, unlabeled]
  project_card:
    types: [created, deleted]
jobs:
  env:
    # since env is not available in if expressions we hack around this
    # constraint by relying on needs/outputs instead
    # see https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    outputs:
      # labels
      BACKLOG_LBL: backlog
      SPRINT_LBL: sprint
      # projects
      TRIAGING_ID: "4"
      TRIAGING_PRJ: https://api.github.com/projects/13697310
      BACKLOG_ID: "5"
      BACKLOG_PRJ: https://api.github.com/projects/13697370
      SPRINT_ID: "8"
      SPRINT_PRJ: https://api.github.com/projects/13829490
    runs-on: ubuntu-latest

  # (helper) get issue number
  issue:
    outputs:
      number: >-
        ${{
          steps.regex.outputs.replaced
          || github.event.issue.id
        }}
    runs-on: ubuntu-latest
    steps:
      - name: regex
        if: github.event_name == 'project_card'
        uses: frabert/replace-string-action@v2.0
        with:
          pattern: .+/(\d+)
          string: ${{ github.event.project_card.content_url }}
          replace-with: $1

  # (helper) whether issue is on Triaging/Sprint board
  project:
    outputs:
      on_triaging: >-
        ${{
          steps.on_triaging.outputs.contains
          || github.event.project_card.project_url == needs.env.outputs.TRIAGING_PRJ
        }}
      on_sprint: >-
        ${{
          steps.on_sprint.outputs.contains
          || github.event.project_card.project_url == needs.env.outputs.SPRINT_PRJ
        }}
    runs-on: ubuntu-latest
    steps:
      - name: on_triaging
        if: github.event_name == 'issues'
        uses: ./.github/actions/project-has-issue
        with:
          org: conda
          project: ${{ needs.env.outputs.TRIAGING_ID }}
          issue: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}
      - name: on_sprint
        if: github.event_name == 'issues'
        uses: ./.github/actions/project-has-issue
        with:
          org: conda
          project: ${{ needs.env.outputs.SPRINT_ID }}
          issue: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}

  # new -> Triaging[New]
  to_triaging:
    # if new issue and not [backlog] or [sprint]
    if: >-
      github.event_name == 'issues'
      && github.event.action == 'opened'
      && !contains(github.event.issue.labels.*.name, needs.env.outputs.BACKLOG_LBL)
      && !contains(github.event.issue.labels.*.name, needs.env.outputs.SPRINT_LBL)
    runs-on: ubuntu-latest
    steps:
      # add to Triaging board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: add # if not present
          project: Triaging
          column: New
          repo-token: ${{ secrets.PROJECT_TOKEN }}

  # new -> Backlog[Unplanned]
  # Triaging[Ready] -> Backlog[Unplanned]
  # Sprint[To Do] -> Backlog[Do Next]
  to_backlog:
    # if new issue with [backlog]
    # if labeled [backlog]
    # if added to Backlog board
    # if unlabeled [sprint]
    # if removed from Sprint board
    if: >-
      github.event.issue.state == 'open' && (
        (
          github.event_name == 'issues'
          && github.event.action == 'opened'
          && contains(github.event.issue.labels.*.name, needs.env.outputs.BACKLOG_LBL)
          && !contains(github.event.issue.labels.*.name, needs.env.outputs.SPRINT_LBL)
        )
        || (
          github.event_name == 'issues'
          && github.event.action == 'labeled'
          && github.event.label.name == needs.env.outputs.BACKLOG_LBL
        )
        || (
          github.event_name == 'project_card'
          && github.event.action == 'created'
          && github.event.project_card.project_url == BACKLOG_PRJ
          && !github.event.project_card.note
          && github.event.project_card.content_url
        )
        || (
          github.event_name == 'issues'
          && github.event.action == 'unlabeled'
          && github.event.label.name == needs.env.outputs.SPRINT_LBL
        )
        || (
          github.event_name == 'project_card'
          && github.event.action == 'deleted'
          && github.event.project_card.project_url == SPRINT_PRJ
          && !github.event.project_card.note
          && github.event.project_card.content_url
        )
      )
    runs-on: ubuntu-latest
    steps:
      # (fail-safe) remove from Triaging board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: delete # if present
          project: Triaging
          column: Ready # unused
          repo-token: ${{ secrets.PROJECT_TOKEN }}
      # add [backlog] label
      - uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: ${{ needs.env.outputs.BACKLOG_LBL }}
          number: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}
      # add to Backlog board (from Triaging board)
      - uses: alex-page/github-project-automation-plus@v0.8.1
        if: >-
          needs.project.outputs.on_triaging || (
            !contains(github.event.issue.labels.*.name, needs.env.outputs.SPRINT_LBL)
            && !needs.project.outputs.on_sprint
          )
        with:
          action: add # if not present
          project: Backlog
          column: Unplanned
          repo-token: ${{ secrets.PROJECT_TOKEN }}
      # add to Backlog board (from Sprint board)
      - uses: alex-page/github-project-automation-plus@v0.8.1
        if: >-
          !needs.project.outputs.on_triaging && (
            contains(github.event.issue.labels.*.name, needs.env.outputs.SPRINT_LBL)
            || needs.project.outputs.on_sprint
          )
        with:
          action: add # if not present
          project: Backlog
          column: Do Next
          repo-token: ${{ secrets.PROJECT_TOKEN }}
      # remove [sprint] label
      - uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: ${{ needs.env.outputs.SPRINT_LBL }}
          number: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}
      # remove from Sprint board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: delete # if present
          project: Sprint
          column: To Do # unused
          repo-token: ${{ secrets.PROJECT_TOKEN }}

  # new -> Sprint[To Do]
  # Backlog[Do Next] -> Sprint[To Do]
  to_sprint:
    # if new issue with [sprint]
    # if unlabeled [backlog]
    # if removed from Backlog board
    # if labeled [sprint]
    # if added to Sprint board
    if: >-
      github.event.issue.state == 'open' && (
        (
          github.event_name == 'issues'
          && github.event.action == 'opened'
          && contains(github.event.issue.labels.*.name, needs.env.outputs.SPRINT_LBL)
        )
        || (
          github.event_name == 'issues'
          && github.event.action == 'unlabeled'
          && github.event.label.name == needs.env.outputs.BACKLOG_LBL
        )
        || (
          github.event_name == 'project_card'
          && github.event.action == 'deleted'
          && github.event.project_card.project_url == BACKLOG_PRJ
          && !github.event.project_card.note
          && github.event.project_card.content_url
        )
        || (
          github.event_name == 'issues'
          && github.event.action == 'labeled'
          && github.event.label.name == needs.env.outputs.SPRINT_LBL
        )
        || (
          github.event_name == 'project_card'
          && github.event.action == 'created'
          && github.event.project_card.project_url == SPRINT_PRJ
          && !github.event.project_card.note
          && github.event.project_card.content_url
        )
      )
    runs-on: ubuntu-latest
    steps:
      # (fail-safe) remove from Triaging board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: delete # if present
          project: Triaging
          column: Ready # unused
          repo-token: ${{ secrets.PROJECT_TOKEN }}
      # remove [backlog] label
      - uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: ${{ needs.env.outputs.BACKLOG_LBL }}
          number: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}
      # remove from Backlog board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: delete # if present
          project: Backlog
          column: Do Next # unused
          repo-token: ${{ secrets.PROJECT_TOKEN }}
      # add [sprint] label
      - uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: ${{ needs.env.outputs.SPRINT_LBL }}
          number: ${{ needs.issue.outputs.number }}
          github_token: ${{ secrets.PROJECT_TOKEN }}
      # add to Sprint board
      - uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          action: add # if not present
          project: Sprint
          column: To Do
          repo-token: ${{ secrets.PROJECT_TOKEN }}
